DROP TABLE IF EXISTS users, items, bookings, comments, requests;

CREATE TABLE IF NOT EXISTS users
(
    user_id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_email VARCHAR UNIQUE NOT NULL,
    user_name  VARCHAR        NOT NULL

);

CREATE TABLE IF NOT EXISTS requests
(
    request_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    request_description  VARCHAR,
    request_requester_id BIGINT,
    request_created      TIMESTAMP without TIME ZONE DEFAULT now(),
    CONSTRAINT requests_users_id_fk FOREIGN KEY (request_requester_id) REFERENCES users
);

CREATE TABLE IF NOT EXISTS items
(
    item_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_name         VARCHAR NOT NULL,
    item_description  VARCHAR NOT NULL,
    item_is_available BOOLEAN NOT NULL,
    item_owner_id     BIGINT,
    item_request_id   BIGINT,
    CONSTRAINT items_users_id_fk FOREIGN KEY (item_owner_id) REFERENCES users,
    CONSTRAINT items_requests_id_fk FOREIGN KEY (item_request_id) REFERENCES requests
);

CREATE TABLE IF NOT EXISTS bookings
(
    booking_id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    booking_start_date TIMESTAMP without TIME ZONE DEFAULT now(),
    booking_end_date   TIMESTAMP without TIME ZONE DEFAULT now(),
    booking_item_id    BIGINT,
    booking_booker_id  BIGINT,
    booking_status     VARCHAR,
    CONSTRAINT bookings_users_id_fk FOREIGN KEY (booking_booker_id) REFERENCES users,
    CONSTRAINT bookings_items_id_fk FOREIGN KEY (booking_item_id) REFERENCES items
);

CREATE TABLE IF NOT EXISTS comments
(
    comment_id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    comment_text      VARCHAR,
    comment_item_id   BIGINT,
    comment_author_id BIGINT,
    comment_created   TIMESTAMP without TIME ZONE DEFAULT now(),
    CONSTRAINT comments_users_id_fk FOREIGN KEY (comment_author_id) REFERENCES users,
    CONSTRAINT comments_items_id_fk FOREIGN KEY (comment_item_id) REFERENCES items
);